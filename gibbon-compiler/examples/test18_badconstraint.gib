#lang gibbon

(data Foo (A Int) (B Int))

(define (foo [ev : Foo]) : Foo
  (case ev
    [(A x) (B x)]    
    [(B y) ev] ;; Needs copy-insertion.  This can be as simple as "B y".
               ;; It could call an out-of-line copy function but that would be wasteful.
    ; [(B y) (A y)]
    ))

(foo (A 1))

;; This will make --packed fail currently:
; (foo (B 33))
