benchmarking mode: updatetree
points data of size 1000 are loaded 
done building two trees, took 0.001716 seconds

  run(0): 0.000210--0.000210
  run(1): 0.000194--0.000194
  run(2): 0.000193--0.000193
  run(3): 0.000237--0.000237
  run(4): 0.000189--0.000189
  run(5): 0.000189--0.000189
  run(6): 0.000190--0.000190
  run(7): 0.000190--0.000190
  run(8): 0.000187--0.000187
  run(9): 0.000188--0.000188
res:[kd-tree,handwritten-c-packed-updatetree,1000,10,42970,0.000197,0.000197]
benchmarking mode: intout
points data of size 1000 are loaded 
done building two trees, took 0.001661 seconds

  run(0): 0.000244--0.000244
  run(1): 0.000236--0.000236
  run(2): 0.000267--0.000267
  run(3): 0.000231--0.000231
  run(4): 0.000231--0.000231
  run(5): 0.000233--0.000233
  run(6): 0.000231--0.000231
  run(7): 0.000232--0.000232
  run(8): 0.000231--0.000231
  run(9): 0.000232--0.000232
res:[kd-tree,handwritten-c-packed-intout,1000,10,42970,0.000237,0.000237]
benchmarking mode: updatetree
points data of size 10000 are loaded 
done building two trees, took 0.020810 seconds

  run(0): 0.001589--0.001589
  run(1): 0.001553--0.001553
  run(2): 0.001542--0.001542
  run(3): 0.001492--0.001492
  run(4): 0.001426--0.001426
  run(5): 0.001424--0.001424
  run(6): 0.001428--0.001428
  run(7): 0.001425--0.001425
  run(8): 0.001430--0.001430
  run(9): 0.001426--0.001426
res:[kd-tree,handwritten-c-packed-updatetree,10000,10,429970,0.001474,0.001474]
benchmarking mode: intout
points data of size 10000 are loaded 
done building two trees, took 0.020692 seconds

  run(0): 0.001841--0.001841
  run(1): 0.001731--0.001731
  run(2): 0.001741--0.001741
  run(3): 0.001730--0.001730
  run(4): 0.001726--0.001726
  run(5): 0.001736--0.001736
  run(6): 0.001727--0.001727
  run(7): 0.001679--0.001679
  run(8): 0.001614--0.001614
  run(9): 0.001618--0.001618
res:[kd-tree,handwritten-c-packed-intout,10000,10,429970,0.001714,0.001714]
benchmarking mode: updatetree
points data of size 100000 are loaded 
done building two trees, took 0.195558 seconds

  run(0): 0.006796--0.006796
  run(1): 0.006727--0.006727
  run(2): 0.006497--0.006497
  run(3): 0.006458--0.006458
  run(4): 0.006278--0.006278
  run(5): 0.006225--0.006225
  run(6): 0.006074--0.006074
  run(7): 0.006016--0.006016
  run(8): 0.005883--0.005883
  run(9): 0.005839--0.005839
res:[kd-tree,handwritten-c-packed-updatetree,100000,10,4299970,0.006279,0.006279]
benchmarking mode: intout
points data of size 100000 are loaded 
done building two trees, took 0.191288 seconds

  run(0): 0.008071--0.008071
  run(1): 0.007839--0.007839
  run(2): 0.007712--0.007712
  run(3): 0.007517--0.007517
  run(4): 0.007359--0.007359
  run(5): 0.007274--0.007274
  run(6): 0.007043--0.007043
  run(7): 0.006983--0.006983
  run(8): 0.006828--0.006828
  run(9): 0.006832--0.006832
res:[kd-tree,handwritten-c-packed-intout,100000,10,4299970,0.007346,0.007346]
benchmarking mode: updatetree
points data of size 1000000 are loaded 
done building two trees, took 1.656628 seconds

  run(0): 0.055339--0.055339
  run(1): 0.054955--0.054955
  run(2): 0.054912--0.054912
  run(3): 0.054944--0.054944
  run(4): 0.054933--0.054933
  run(5): 0.055176--0.055176
  run(6): 0.054924--0.054924
  run(7): 0.054926--0.054926
  run(8): 0.054939--0.054939
  run(9): 0.054920--0.054920
res:[kd-tree,handwritten-c-packed-updatetree,1000000,10,42999970,0.054997,0.054997]
benchmarking mode: intout
points data of size 1000000 are loaded 
done building two trees, took 1.663870 seconds

  run(0): 0.067016--0.067016
  run(1): 0.066616--0.066616
  run(2): 0.066584--0.066584
  run(3): 0.066613--0.066613
  run(4): 0.066587--0.066587
  run(5): 0.066619--0.066619
  run(6): 0.066591--0.066591
  run(7): 0.066585--0.066585
  run(8): 0.066589--0.066589
  run(9): 0.066586--0.066586
res:[kd-tree,handwritten-c-packed-intout,1000000,10,42999970,0.066639,0.066639]
benchmarking mode: updatetree
points data of size 10000000 are loaded 
done building two trees, took 21.667946 seconds

  run(0): 0.575336--0.575336
  run(1): 0.574483--0.574483
  run(2): 0.574514--0.574514
  run(3): 0.574447--0.574447
  run(4): 0.574547--0.574547
  run(5): 0.574656--0.574656
  run(6): 0.574572--0.574572
  run(7): 0.574573--0.574573
  run(8): 0.574534--0.574534
  run(9): 0.574543--0.574543
res:[kd-tree,handwritten-c-packed-updatetree,10000000,10,429999970,0.574620,0.574620]
benchmarking mode: intout
points data of size 10000000 are loaded 
done building two trees, took 21.561900 seconds

  run(0): 0.687769--0.687769
  run(1): 0.687271--0.687271
  run(2): 0.687245--0.687245
  run(3): 0.687260--0.687260
  run(4): 0.687343--0.687343
  run(5): 0.687205--0.687205
  run(6): 0.687290--0.687290
  run(7): 0.687120--0.687120
  run(8): 0.687102--0.687102
  run(9): 0.687617--0.687617
res:[kd-tree,handwritten-c-packed-intout,10000000,10,429999970,0.687322,0.687322]
benchmarking mode: updatetree
points data of size 100000000 are loaded 
done building two trees, took 278.641882 seconds

  run(0): 5.725130--5.725130
  run(1): 5.722981--5.722981
  run(2): 5.719454--5.719454
  run(3): 5.719263--5.719263
  run(4): 5.719395--5.719395
  run(5): 5.719677--5.719677
  run(6): 5.720381--5.720381
  run(7): 5.719116--5.719116
  run(8): 5.719054--5.719054
  run(9): 5.719024--5.719024
res:[kd-tree,handwritten-c-packed-updatetree,100000000,10,4299999970,5.720347,5.720347]
benchmarking mode: intout
points data of size 100000000 are loaded 
done building two trees, took 279.457224 seconds

  run(0): 6.850966--6.850966
  run(1): 6.848201--6.848201
  run(2): 6.849065--6.849065
  run(3): 6.848122--6.848122
  run(4): 6.851498--6.851498
  run(5): 6.847924--6.847924
  run(6): 6.847460--6.847460
  run(7): 6.847212--6.847212
  run(8): 6.847793--6.847793
  run(9): 6.849463--6.849463
res:[kd-tree,handwritten-c-packed-intout,100000000,10,4299999970,6.848770,6.848770]
