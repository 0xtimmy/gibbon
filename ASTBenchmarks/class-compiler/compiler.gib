#lang gibbon

(require "common.gib")
(require "eval.gib")
(require "passes/uniqify.gib")
(require "passes/flatten.gib")
(require "passes/select-instructions.gib")
(require "passes/assignhomes.gib")
(require "passes/patch-instructions.gib")

(provide compile)

(define (compile [prg : R0]) : X86
  (let ([prg0 : R0 (uniqify prg)])
    (let ([prg1 : C0 (flatten prg0)])
      (let ([prg2 : X86 (select-instructions prg1)])
        (let ([prg3 : X86 (assign-homes prg2)])
          (let ([prg4 : X86 (patch-instructions prg3)])
            prg4))))))

#;
(compile
 (ProgramR (LetER (vector 'a (LitER 2))
                  (AddER (LitER 40) (VarER 'a)))))
